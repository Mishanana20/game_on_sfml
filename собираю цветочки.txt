#include <sstream>
#include <SFML/Graphics.hpp>
#include "map.h" 
#include "view.h"

using namespace sf;


class Player { // класс Игрока
	/*создадим приватные переменные координат персонажа*/
private: float x, y;
public:
	float  w, h, dx, dy, speed = 0; //координаты игрока х и у, высота ширина, ускорение (по х и по у), сама скорость
	int dir,playerScore,health; //направление (direction) движения игрока
	bool life;
	String File; //файл с расширением
	Image image;//сфмл изображение
	Texture texture;//сфмл текстура
	Sprite sprite;//сфмл спрайт


	Player(String F, float X, float Y, float W, float H) {
		dx = 0; dy = 0; speed = 0; dir = 0; playerScore = 0; health = 100;
		File = F;//имя файла+расширение
		w = W; h = H;//высота и ширина
		image.loadFromFile("images/" + File);//запихиваем в image наше изображение вместо File мы передадим то, что пропишем при создании объекта. В нашем случае "hero.png" и получится запись идентичная image.loadFromFile("images/hero/png");
		//image.createMaskFromColor(Color(41, 33, 59));//убираем ненужный темно-синий цвет, эта тень мне показалась не красивой.
		texture.loadFromImage(image);//закидываем наше изображение в текстуру
		sprite.setTexture(texture);//заливаем спрайт текстурой
		x = X; y = Y;//координата появления спрайта
		sprite.setTextureRect(IntRect(0, 0, w, h)); //Задаем спрайту один прямоугольник для вывода одного льва, а не кучи львов сразу. IntRect - приведение типов
	}
	void update(float time) //???????? "?????????" ??????? ??????. update - ??????????. ????????? ? ???? ????? SFML , ?????????? ???? ???????? ??????????, ????? ????????? ????????
	{
		switch (dir)//????????? ????????? ? ??????????? ?? ???????????. (?????? ????? ????????????? ???????????)
		{
		case 0: dx = speed; dy = 0; break;//?? ???? ?????? ????????????? ????????, ?? ?????? ????????. ????????, ??? ???????? ???? ?????? ??????
		case 1: dx = -speed; dy = 0; break;//?? ???? ?????? ????????????? ????????, ?? ?????? ????????. ??????????, ??? ???????? ???? ?????? ?????
		case 2: dx = 0; dy = speed; break;//?? ???? ?????? ??????? ????????, ?? ?????? ?????????????. ??????????, ??? ???????? ???? ?????? ????
		case 3: dx = 0; dy = -speed; break;//?? ???? ?????? ??????? ????????, ?? ?????? ?????????????. ??????????, ??? ???????? ???? ?????? ?????
		}
		x += dx * time;//?? ???????? ?? ???????? ?????. ???? ????????? ?? ????? ???????? ???????? ????????? ? ??? ????????? ????????
		y += dy * time;//?????????? ?? ??????
		speed = 0;//???????? ????????, ????? ???????? ???????????.
		sprite.setPosition(x, y); //??????? ?????? ? ??????? x y , ??????????. ?????????? ??????? ? ???? ???????, ????? ?? ??? ?????? ????? ?? ?????.
			interactionWithMap();//вызываем функцию, отвечающую за взаимодействие с картой
			if (health <= 0) { life = false; speed = 0; }//если жизней меньше либо равно 0, то умираем и исключаем движение игрока после смерти
	}

	float getplayerecoordinateX() {// этим методом будем забирать координату Х
		return x;
	}
	float getplayerecoordinateY() {
		return y;
	}

	void interactionWithMap() //взаимодействие с картой
	{for (int i = y / 32; i < (y + h) / 32; i++)//проходимся по тайликам, контактирующим с игроком, то есть по всем квадратикам размера 32*32, которые мы окрашивали в 9 уроке. про условия читайте ниже.
			for (int j = x / 32; j < (x + w) / 32; j++)//икс делим на 32, тем самым получаем левый квадратик, с которым персонаж соприкасается. (он ведь больше размера 32*32, поэтому может одновременно стоять на нескольких квадратах). А j<(x + w) / 32 - условие ограничения координат по иксу. то есть координата самого правого квадрата, который соприкасается с персонажем. таким образом идем в цикле слева направо по иксу, проходя по от левого квадрата (соприкасающегося с героем), до правого квадрата (соприкасающегося с героем)
			{
				if (TileMap[i][j] == '0')//если наш квадратик соответствует символу 0 (стена), то проверяем "направление скорости" персонажа:
				{
					if (dy > 0)//если мы шли вниз,
					{
						y = i * 32 - h;//то стопорим координату игрек персонажа. сначала получаем координату нашего квадратика на карте(стены) и затем вычитаем из высоты спрайта персонажа.
					}
					if (dy < 0)
					{
						y = i * 32 + 32;//аналогично с ходьбой вверх. dy<0, значит мы идем вверх (вспоминаем координаты паинта)
					}
					if (dx > 0)
					{
						x = j * 32 - w;//если идем вправо, то координата Х равна стена (символ 0) минус ширина персонажа
					}
					if (dx < 0)
					{
						x = j * 32 + 32;//аналогично идем влево
					}
				}

				if (TileMap[i][j] == 's') { //если символ равен 's' (камень)
					playerScore++;//какое то действие... например телепортация героя
					TileMap[i][j] = ' ';//убираем камень, типа взяли бонус. можем и не убирать, кстати.
				}
				if (TileMap[i][j] == 'f') {
					health -= 40;
					TileMap[i][j] = ' ';
				}
				if (TileMap[i][j] == 'h') {
					health += 20;
					TileMap[i][j] = ' ';
				}
			}
}
};

int main()
{
	RenderWindow window(VideoMode(400, 500), "Test!");//??????? ????  200x200

	Font font;//шрифт
	font.loadFromFile("CyrilicOld.ttf");//передаеим нашему шрифту файл
	Text text("", font, 20);
	//text.setColor(sf::Color::Red);
	text.setStyle(sf::Text::Bold | sf::Text::Underlined);//жирный и подчеркнутый текст. по умолчанию он "худой":)) и не подчеркнутый
	view.reset(sf::FloatRect(0, 0, 640, 480));//размер "вида" камеры при создании объекта вида камеры. (потом можем менять как хотим) Что то типа инициализации.

	Image map_image;//?????? ??????????? ??? ?????
	map_image.loadFromFile("images/map.png");//????????? ???? ??? ?????
	Texture map;//???????? ?????
	map.loadFromImage(map_image);//???????? ???????? ?????????
	Sprite s_map;//??????? ?????? ??? ?????
	s_map.setTexture(map);//???????? ???????? ????????

	Player p("fang.png", 100, 100, 40.0, 50.0);
	//p.setPosition(50,100);

	float currentFrame = 0; // ??????????, ? ??????? ???????? ????? ???????? ?????


	Clock clock;//?????????? ??????? (?????? ? ??????????)

	while (window.isOpen())
	{
		float time = clock.getElapsedTime().asMicroseconds();
		clock.restart();//????????????? ????. (???????? ????? ?????) 
		time = time / 800; //?????????? ???????? ????

		Event event; //???????? ??????? ???????? ????
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}
		if ((Keyboard::isKeyPressed(Keyboard::Left) )) {
			p.dir = 1; p.speed = 0.1;//dir =1 - ??????????? ?????, speed =0.1 - ???????? ????????. ???????? - ????? ?? ??? ????? ?? ?? ??? ?? ???????? ? ????? ?? ?????????? ?????? ???
			currentFrame += 0.005 * time;
			if (currentFrame > 6) currentFrame -= 6;
			p.sprite.setTextureRect(IntRect(40 * int(currentFrame) + 40, 244, -40, 50)); //????? ?????? p ?????? player ?????? ??????, ????? ???????? (????????? ???????? ?????)
			
		}

		if ((Keyboard::isKeyPressed(Keyboard::Right) )) {
			p.dir = 0; p.speed = 0.1;//??????????? ??????, ?? ????
			currentFrame += 0.005 * time;
			if (currentFrame > 6) currentFrame -= 6;
			p.sprite.setTextureRect(IntRect(40 * int(currentFrame), 244, 40, 50)); //????? ?????? p ?????? player ?????? ??????, ????? ???????? (????????? ???????? ?????)
			
		}

		if ((Keyboard::isKeyPressed(Keyboard::Up) )) {
			p.dir = 3; p.speed = 0.1;//??????????? ????, ?? ????
			currentFrame += 0.005 * time;
			
			////if (currentFrame > 3) currentFrame -= 3;
		   ////p.sprite.setTextureRect(IntRect(96 * int(currentFrame), 288, 96, 96)); //????? ?????? p ?????? player ?????? ??????, ????? ???????? (????????? ???????? ?????)

		}

		if ((Keyboard::isKeyPressed(Keyboard::Down))) { //???? ?????? ??????? ??????? ????? ??? ???? ????? ?
			p.dir = 2; p.speed = 0.1;//??????????? ?????, ?? ????
			currentFrame += 0.005 * time; //?????? ??? ??????????? ?? "??????". ?????????? ??????? ?? ???? ???????? ???????????? ??????? ? ????????. ??????? 0.005 ????? ???????? ???????? ????????
			//if (currentFrame > 3) currentFrame -= 3; //?????????? ?? ?????? ? ??????? ?? ?????? ????????????. ???? ?????? ? ???????? ????? - ???????????? ?????.
			//p.sprite.setTextureRect(IntRect(96 * int(currentFrame), 0, 96, 96)); //?????????? ?? ??????????? ?. ?????????? 96,96*2,96*3 ? ????? 96

		}
		getplayercoordinate(p.getplayerecoordinateX(), p.getplayerecoordinateY());

		p.update(time);
		//viewmap(time);//двигать камеру буковками
		//changeview();

		window.setView(view);//"оживляем" камеру в окне sfm

		window.clear(); //???????? ?????

		/////////////////////////////Рисуем карту/////////////////////
		for (int i = 0; i < HEIGHT_MAP; i++)
			for (int j = 0; j < WIDTH_MAP; j++)
			{
				if (TileMap[i][j] == ' ')  s_map.setTextureRect(IntRect(0, 0, 32, 32)); //если встретили символ пробел, то рисуем 1й квадратик
				if (TileMap[i][j] == 's')  s_map.setTextureRect(IntRect(32, 0, 32, 32));//если встретили символ s, то рисуем 2й квадратик
				if ((TileMap[i][j] == '0')) s_map.setTextureRect(IntRect(64, 0, 32, 32));//если встретили символ 0, то рисуем 3й квадратик
				if ((TileMap[i][j] == 'f')) s_map.setTextureRect(IntRect(96, 0, 32, 32));//добавили цветок
				if ((TileMap[i][j] == 'h')) s_map.setTextureRect(IntRect(128, 0, 32, 32));//и сердечко

				s_map.setPosition(j * 32, i * 32);//по сути раскидывает квадратики, превращая в карту. то есть задает каждому из них позицию. если убрать, то вся карта нарисуется в одном квадрате 32*32 и мы увидим один квадрат

				window.draw(s_map);//рисуем квадратики на экран
			}
		std::ostringstream playerScoreString;    // объявили переменную
		playerScoreString << p.playerScore;		//занесли в нее число очков, то есть формируем строку
		text.setString("Собрано камней:" + playerScoreString.str());
		text.setPosition(view.getCenter().x-165, view.getCenter().y-200);//задаем позицию текста, центр камеры///задаем позицию текста, отступая от центра камеры
		window.draw(text);//рисую этот текст
		window.draw(p.sprite);//???????? ??????
		window.display();//?????? ??? ?? ???????
	}
	return 0;
}
